// Mocks generated by Mockito 5.4.2 from annotations
// in fitur_lihat_stock_barang/test/fitur_lihat_stock_barang_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:common/domain/repository/i_barang_repository.dart' as _i3;
import 'package:common/response/api_response.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiResponse_0 extends _i1.SmartFake implements _i2.ApiResponse {
  _FakeApiResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IBarangRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIBarangRepository extends _i1.Mock implements _i3.IBarangRepository {
  MockIBarangRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ApiResponse> getStockBarang(
    int? pageNumber,
    String? keyword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStockBarang,
          [
            pageNumber,
            keyword,
          ],
        ),
        returnValue: _i4.Future<_i2.ApiResponse>.value(_FakeApiResponse_0(
          this,
          Invocation.method(
            #getStockBarang,
            [
              pageNumber,
              keyword,
            ],
          ),
        )),
      ) as _i4.Future<_i2.ApiResponse>);
}
